// This file was generated by Claude

import Foundation

/// Errors that can occur when using the Claude Code SDK
public enum ClaudeSDKError: LocalizedError, Sendable {
    /// The Claude Code CLI could not be found in any of the expected locations
    case cliNotFound(searchedPaths: [URL])
    
    /// Failed to establish connection with the CLI
    case cliConnectionError(underlying: any Error)
    
    /// The CLI process exited with an error
    case processError(message: String, exitCode: Int32)
    
    /// Failed to decode JSON from CLI output
    case jsonDecodeError(line: String, error: any Error)
    
    /// Invalid configuration provided
    case invalidConfiguration(reason: String)
    
    /// The CLI process was terminated unexpectedly
    case processTerminated
    
    /// Timeout occurred while waiting for CLI response
    case timeout(duration: TimeInterval)
    
    /// Invalid message type received
    case invalidMessageType(description: String)
    
    /// Stream ended unexpectedly
    case unexpectedStreamEnd
    
    /// Failed to parse a message from CLI output
    case messageParseError(message: String, data: [String: AnyCodable]?)
    
    public var errorDescription: String? {
        switch self {
        case .cliNotFound(let paths):
            let pathList = paths.map { $0.path }.joined(separator: "\n  - ")
            return """
            Claude Code CLI not found. Please install it using:
            npm install -g @anthropic-ai/claude-code
            
            Searched paths:
              - \(pathList)
            """
            
        case .cliConnectionError(let error):
            return "Failed to connect to Claude Code CLI: \(error.localizedDescription)"
            
        case .processError(let message, let exitCode):
            return "Claude Code CLI process failed with exit code \(exitCode): \(message)"
            
        case .jsonDecodeError(let line, let error):
            return "Failed to decode JSON from CLI output. Line: '\(line)'. Error: \(error.localizedDescription)"
            
        case .invalidConfiguration(let reason):
            return "Invalid configuration: \(reason)"
            
        case .processTerminated:
            return "Claude Code CLI process was terminated unexpectedly"
            
        case .timeout(let duration):
            return "Timeout occurred after \(duration) seconds while waiting for CLI response"
            
        case .invalidMessageType(let description):
            return "Invalid message type received: \(description)"
            
        case .unexpectedStreamEnd:
            return "The message stream ended unexpectedly without a result message"
            
        case .messageParseError(let message, let data):
            let dataDescription = data?.description ?? "nil"
            return "Failed to parse message from CLI output: \(message). Data: \(dataDescription)"
        }
    }
    
    public var recoverySuggestion: String? {
        switch self {
        case .cliNotFound:
            return "Install Claude Code CLI using npm or ensure it's in your PATH"
            
        case .cliConnectionError:
            return "Check that the CLI is properly installed and your system allows subprocess execution"
            
        case .processError:
            return "Review the error message and ensure your request is properly formatted"
            
        case .jsonDecodeError:
            return "This may indicate a CLI version mismatch. Try updating both the SDK and CLI"
            
        case .invalidConfiguration:
            return "Review your configuration options and ensure they are valid"
            
        case .processTerminated:
            return "The CLI may have crashed. Try reinstalling or updating it"
            
        case .timeout:
            return "Try increasing the timeout duration or simplifying your request"
            
        case .invalidMessageType:
            return "This may indicate a CLI version mismatch. Ensure you're using compatible versions"
            
        case .unexpectedStreamEnd:
            return "The CLI may have encountered an error. Check the CLI logs for more information"
            
        case .messageParseError:
            return "This may indicate a CLI version mismatch or malformed output. Try updating both the SDK and CLI"
        }
    }
    
    public var failureReason: String? {
        switch self {
        case .cliNotFound:
            return "CLI executable not found"
            
        case .cliConnectionError:
            return "Connection failed"
            
        case .processError:
            return "Process execution failed"
            
        case .jsonDecodeError:
            return "JSON parsing failed"
            
        case .invalidConfiguration:
            return "Configuration validation failed"
            
        case .processTerminated:
            return "Process terminated"
            
        case .timeout:
            return "Operation timed out"
            
        case .invalidMessageType:
            return "Message validation failed"
            
        case .unexpectedStreamEnd:
            return "Stream ended prematurely"
            
        case .messageParseError:
            return "Message parsing failed"
        }
    }
}